import { useMemo, useState, useEffect, FunctionComponent } from "react";
import {
  Toolbar,
  Typography,
  Grid,
  Container,
  Stack,
  Divider,
  Button,
} from "@mui/material";
import { Box } from "@mui/system";
import type { NextPage } from "next";
import { motion, useAnimation } from "framer-motion";
import { useInView } from "react-intersection-observer";
import Head from "next/head";
import Image from "next/image";
import { ReviewCard } from "../src/client/components/reviews/review-card";
import { Reviewer } from "../src/types/review";
import { reviewerData } from "../src/mock-api-data/reviewers";
import { ProductCard } from "../src/client/components/products/product-card";
import { ProductType } from "../src/types/product";
import { productData } from "../src/mock-api-data/products";
import { Footer } from "../src/client/components/footer";
import { ThreeP } from "@mui/icons-material";
import { WhenVisibleAnimation } from "../src/client/components/animations/when-visible-animation";

type HomePageProperties = {
  reviews: Reviewer[];
  products: ProductType[];
};

const FadeInWhenVisible: FunctionComponent = ({ children }) => {
  const controls = useAnimation();
  const [ref, inView] = useInView();

  useEffect(() => {
    if (inView) {
      controls.start("visible");
    }
  }, [controls, inView]);

  return (
    <motion.div
      ref={ref}
      animate={controls}
      initial="hidden"
      transition={{ duration: 0.3 }}
      variants={{
        visible: { opacity: 1, scale: 1 },
        hidden: { opacity: 0, scale: 0 },
      }}
    >
      {children}
    </motion.div>
  );
};

const Home: NextPage<HomePageProperties> = ({
  reviews = [],
  products = [],
}) => {
  const [reviewerValue, setReviewerValue] = useState(0);

  const variants = {
    visible: (i: number) => ({
      opacity: 1,
      transition: {
        delay: i * 0.3,
      },
      y: 0,
    }),
    hidden: { opacity: 0, y: "100%" },
  };
  return (
    <div>
      <Head>
        <title>NextJS Store Example</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Box
        sx={{
          backgroundColor: "red",
          height: "80vh",
          clipPath: "polygon(0 0, 100% 0, 100% 60vh, 0 100%)",
        }}
      >
        <Container sx={{ height: "inherit" }}>
          <motion.div
            variants={variants}
            custom={0}
            initial="hidden"
            animate="visible"
            style={{ height: "inherit" }}
          >
            <Stack
              justifyContent="center"
              alignItems="start"
              sx={{ height: "inherit" }}
              spacing={2}
            >
              <Typography variant="h3">NextJS Store Demo</Typography>
              <Button variant="outlined">See Products</Button>
            </Stack>
          </motion.div>
        </Container>
      </Box>

      <Container component="main">
        <Stack spacing={6} divider={<Divider />}>
          <Stack alignItems="center" spacing={6} sx={{ pt: "48px" }}>
            <Typography variant="h2">Products</Typography>
            <Grid container>
              {products.map(
                ({ id, title, image, description, rating, price }, i) => (
                  <Grid item md={6} sx={{ padding: "25px" }}>
                    <WhenVisibleAnimation variants={variants} custom={i}>
                      <ProductCard
                        key={id}
                        id={id}
                        title={title}
                        image={image}
                        description={description}
                        rating={rating}
                        price={price}
                      />
                    </WhenVisibleAnimation>
                  </Grid>
                )
              )}
            </Grid>
          </Stack>

          <Stack spacing={5}>
            <Typography variant="h2">Reviews</Typography>
            <Box sx={{ display: "flex", overflowX: "auto", maxWidth: "100vw" }}>
              {reviews.map(({ rating, comment, name, id, image }, index) => (
                <Box sx={{ pr: "12.5px", pl: "12.5px" }}>
                  <ReviewCard
                    image={image}
                    rating={rating}
                    comment={comment}
                    id={id}
                    key={id}
                    name={name}
                  />
                </Box>
              ))}
            </Box>
          </Stack>
        </Stack>
      </Container>
      <Footer />
    </div>
  );
};

export const getServerSideProps = () => {
  return {
    props: {
      reviews: reviewerData,
      products: productData.slice(0, 4),
    },
  };
};

export default Home;
